// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// C_arith_unary_operator
SEXP C_arith_unary_operator(SEXP op, SEXP x);
RcppExport SEXP _AltStat_C_arith_unary_operator(SEXP opSEXP, SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type op(opSEXP);
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(C_arith_unary_operator(op, x));
    return rcpp_result_gen;
END_RCPP
}
// test
bool test(double x, double y);
RcppExport SEXP _AltStat_test(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(test(x, y));
    return rcpp_result_gen;
END_RCPP
}
// C_has_ptr
bool C_has_ptr(SEXP x);
RcppExport SEXP _AltStat_C_has_ptr(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(C_has_ptr(x));
    return rcpp_result_gen;
END_RCPP
}
// C_binary_arith_operator
SEXP C_binary_arith_operator(SEXP op, SEXP x, SEXP y);
RcppExport SEXP _AltStat_C_binary_arith_operator(SEXP opSEXP, SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type op(opSEXP);
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(C_binary_arith_operator(op, x, y));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_AltStat_C_arith_unary_operator", (DL_FUNC) &_AltStat_C_arith_unary_operator, 2},
    {"_AltStat_test", (DL_FUNC) &_AltStat_test, 2},
    {"_AltStat_C_has_ptr", (DL_FUNC) &_AltStat_C_has_ptr, 1},
    {"_AltStat_C_binary_arith_operator", (DL_FUNC) &_AltStat_C_binary_arith_operator, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_AltStat(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
